Hello - from c:\Users\agrippa\.vscode\extensions\jaredly.reason-vscode-1.5.2\bin.native.exe.hot.exe
Previous log location: C:\Users\agrippa\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":"80","per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/agrippa/Documents/GitHub/my-react-app/main.rei","languageId":"reason","version":1,"text":"type point = (float, float);\r\ntype svg = string;\r\n\r\ntype line = (point, point);\r\ntype circle = (point, float);\r\n\r\ntype primitive = Line(line) | Circle(circle) | Point(point);\r\ntype ghost = Ghost(primitive);\r\ntype ghostWorld = list(ghost);\r\n\r\nlet draw: ghost => svg;\r\n\r\nlet find_intersections: primitive => primitive => list(point);\r\n\r\nlet append_ghost: primitive => ghostWorld => ghostWorld;\r\n\r\nlet check_duplicates: ghost => ghostWorld => bool;\r\n\r\nlet nearest_point_on_primitive: point => primitive => (float, point);\r\n\r\nlet nearest_ghost: point => ghostWorld => (float, point, ghost);\r\n\r\nlet snap_cursor: point => ghostWorld => point;\r\n"}}}
